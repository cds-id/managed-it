@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --border-radius: 0.75rem;
  --screen-width: 90vmin;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell,
    Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

/* Rich Editor Styles */
.ProseMirror p.is-editor-empty:first-child::before {
  color: #adb5bd;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror {
  @apply prose prose-sm sm:prose lg:prose-lg xl:prose-xl max-w-none;
}

.ProseMirror:focus {
  @apply outline-none;
}

.ProseMirror img {
  @apply max-h-[400px] rounded-md;
}

/* Additional editor styles */
.ProseMirror > * + * {
  @apply mt-4;
}

.ProseMirror ul,
.ProseMirror ol {
  @apply pl-4;
}

.ProseMirror h1 {
  @apply text-2xl font-bold mt-6 mb-4;
}

.ProseMirror h2 {
  @apply text-xl font-bold mt-5 mb-3;
}

.ProseMirror h3 {
  @apply text-lg font-bold mt-4 mb-2;
}

.ProseMirror blockquote {
  @apply pl-4 border-l-4 border-gray-200 italic;
}

.ProseMirror code {
  @apply bg-gray-100 rounded px-1;
}

.ProseMirror pre {
  @apply bg-gray-100 rounded p-4 overflow-x-auto;
}

.ProseMirror a {
  @apply text-blue-600 hover:text-blue-800 underline;
}


/* CKEditor container styles */
.ck-editor__editable {
  min-height: 200px;
  max-height: 400px;
}

.ck.ck-editor__editable > .ck-placeholder::before {
  color: #6b7280;
}

.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused {
  border-color: #6366f1 !important;
}

.ck.ck-toolbar {
  border-color: #e5e7eb !important;
}

.ck.ck-toolbar .ck-toolbar__items {
  flex-wrap: wrap;
}
